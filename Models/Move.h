#pragma once
#include <stdlib.h>

// Определяем тип для координат позиций на доске
// int8_t используется для экономии памяти (значения от -128 до 127)
typedef int8_t POS_T;

// Структура, описывающая ход в шашках
struct move_pos
{
    POS_T x, y;             // Начальная позиция фигуры (откуда ходим)
    POS_T x2, y2;           // Конечная позиция фигуры (куда ходим)
    POS_T xb = -1, yb = -1; // Позиция побитой фигуры (по умолчанию -1 = нет взятия)

    // Конструктор для обычного хода без взятия
    // Использует список инициализации для эффективности
    move_pos(const POS_T x, const POS_T y, const POS_T x2, const POS_T y2) : x(x), y(y), x2(x2), y2(y2)
    {
    }
    
    // Конструктор для хода со взятием
    // Устанавливает все координаты: начальную, конечную и побитой фигуры
    move_pos(const POS_T x, const POS_T y, const POS_T x2, const POS_T y2, const POS_T xb, const POS_T yb)
        : x(x), y(y), x2(x2), y2(y2), xb(xb), yb(yb)
    {
    }

    // Оператор сравнения на равенство
    // Сравнивает только начальную и конечную позицию (не учитывает побитые фигуры)
    // Это позволяет идентифицировать уникальные ходы независимо от взятий
    bool operator==(const move_pos &other) const
    {
        return (x == other.x && y == other.y && x2 == other.x2 && y2 == other.y2);
    }
    
    // Оператор сравнения на неравенство
    // Использует оператор равенства для определения неравенства
    bool operator!=(const move_pos &other) const
    {
        return !(*this == other);
    }
};
